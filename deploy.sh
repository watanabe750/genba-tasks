#!/usr/bin/env bash
set -euo pipefail

# ==== ‰∫ãÂâç„Å´Êõ∏„ÅçÊèõ„Åà„Çã/„Ç®„ÇØ„Çπ„Éù„Éº„Éà„Åó„Å¶„Åä„ÅèÂÄ§ ====
# Áí∞Â¢ÉÂ§âÊï∞„Åß‰∏äÊõ∏„ÅçÂèØËÉΩ„ÄÇÊú¨Áï™„Åß„ÅØÂøÖ„ÅöÁí∞Â¢ÉÂ§âÊï∞„ÇíË®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ
REGION="${REGION:-ap-northeast-1}"
ACCOUNT_ID="${ACCOUNT_ID:?Error: ACCOUNT_ID is required. Set via environment variable.}"
REPO_API="${REPO_API:-genba-task-api}"
CLUSTER="${CLUSTER:-genba-task-cluster}"
SERVICE_API="${SERVICE_API:-genba-task-svc}"

ECR="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com"
TAG="${TAG:-$(git rev-parse --short HEAD 2>/dev/null || date +%Y%m%d%H%M%S)}"

echo "REGION=$REGION  ACCOUNT_ID=$ACCOUNT_ID  REPO_API=$REPO_API"
echo "CLUSTER=$CLUSTER SERVICE_API=$SERVICE_API  TAG=$TAG"

# 0) Ë™çË®º„ÉÅ„Çß„ÉÉ„ÇØ
aws sts get-caller-identity >/dev/null
echo "‚úî AWS CLI Ë™çË®ºOK"

# 1) ECR „É≠„Ç∞„Ç§„É≥
aws ecr get-login-password --region "$REGION" \
| docker login --username AWS --password-stdin "$ECR"

# 2) API „Ç§„É°„Éº„Ç∏ build & push
docker build -t "${ECR}/${REPO_API}:${TAG}" -f backend/Dockerfile ./backend
docker push "${ECR}/${REPO_API}:${TAG}"

# 3) Êó¢Â≠ò„Çø„Çπ„ÇØÂÆöÁæ©ÂèñÂæó
CUR_TD_ARN="$(aws ecs describe-services --cluster "$CLUSTER" --services "$SERVICE_API" \
  --query 'services[0].taskDefinition' --output text)"
FAMILY="$(aws ecs describe-task-definition --task-definition "$CUR_TD_ARN" \
  --query 'taskDefinition.family' --output text)"

# 4) „Ç≥„É≥„ÉÜ„ÉäÂÆöÁæ©„ÇíÂèñÂæó„Åó„Å¶ image „ÇíÁΩÆ„ÅçÊèõ„ÅàÔºàÂÖàÈ†≠„ÅÆ„Ç≥„É≥„ÉÜ„Éä„ÇíÊõ¥Êñ∞Ôºâ
aws ecs describe-task-definition --task-definition "$CUR_TD_ARN" \
  --query 'taskDefinition.containerDefinitions' >/tmp/containers.json

# Ë§áÊï∞„Ç≥„É≥„ÉÜ„Éä„ÅÆÂ†¥Âêà„ÅØÂøÖË¶Å„Å´Âøú„Åò„Å¶ .name „ÅßÂàÜÂ≤ê„Åó„Å¶„Åè„Å†„Åï„ÅÑ
jq --arg IMG "${ECR}/${REPO_API}:${TAG}" '.[0].image = $IMG' \
  /tmp/containers.json >/tmp/containers.new.json

# 5) Êñ∞„Åó„ÅÑ„Çø„Çπ„ÇØÂÆöÁæ©„ÇíÁôªÈå≤
EXEC_ROLE_ARN="$(aws iam list-roles \
  --query 'Roles[?contains(RoleName,`ecsTaskExecutionRole`)].Arn | [0]' --output text)"
TASK_ROLE_ARN="$(aws iam list-roles \
  --query 'Roles[?contains(RoleName,`ecsTaskRole`)].Arn | [0]' --output text)"

NEW_TD_ARN="$(aws ecs register-task-definition \
  --family "$FAMILY" \
  --requires-compatibilities FARGATE \
  --network-mode awsvpc \
  --cpu 256 --memory 512 \
  --execution-role-arn "$EXEC_ROLE_ARN" \
  --task-role-arn "$TASK_ROLE_ARN" \
  --container-definitions file:///tmp/containers.new.json \
  --query 'taskDefinition.taskDefinitionArn' --output text)"

echo "New TaskDef: $NEW_TD_ARN"

# 6) „Çµ„Éº„Éì„ÇπÊõ¥Êñ∞Ôºà„É≠„Éº„É™„É≥„Ç∞Ôºâ
aws ecs update-service --cluster "$CLUSTER" --service "$SERVICE_API" \
  --task-definition "$NEW_TD_ARN" --force-new-deployment

echo "üéâ Deploy done: ${ECR}/${REPO_API}:${TAG}"
